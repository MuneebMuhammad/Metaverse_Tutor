/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 student.gltf
Author: Sergey Burov (https://sketchfab.com/s-burov)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/student-1f7b8a16a6ea4da49082b4eee85d647b
Title: Student / Студент
*/

import React, { useRef } from 'react'
import { useEffect, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import SpeechRecognition , { useSpeechRecognition } from 'react-speech-recognition'
import axios from 'axios'

export default function Model(props) {
  const { transcript, resetTranscript } = useSpeechRecognition()
  const [talk, setTalk] = useState(true)
  const [listen, setListen] = useState(false)

  const { nodes, materials } = useGLTF('/student.gltf')

  function handleListen() {
    if (listen) {
        console.log("Transcript: ", transcript)
        if (transcript != ""){
          axios.post('http://localhost:4000/text-input', {message: transcript})
          .then(response => props.setSpeechText(response.data))
        }

        SpeechRecognition.stopListening()
        resetTranscript()
        setListen(false)
    } else {
        SpeechRecognition.startListening()
        setListen(true)
    }
  }

  useEffect(()=>{
    setTalk(!talk)
  }, [transcript])

  return (
    <group {...props} dispose={null} onClick={(e)=> {
      handleListen()
      }}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group position={[0.04, -0.11, 1.56]} rotation={[-0.02, 0.02, 0.07]} scale={[0.99, 1.03, 1.03]}>
          <mesh geometry={nodes.OCHKI_0.geometry} material={materials.Black}/>
          {/* <mesh geometry={nodes.OCHKI_1.geometry} material={materials.Woman_Children} /> */}
          <mesh geometry={nodes.OCHKI_2.geometry} material={materials['Material.026']} />
        </group>
        <group  position={[0.09, 0, 1.54]} rotation={[0.43, 0.11, 0]} scale={[0.15, 0.16, 0.17]}>
          <mesh  geometry={nodes.APPARAT_1_0.geometry} material={materials['Material.017']} />
          <mesh  geometry={nodes.APPARAT_1_1.geometry} material={materials['Material.018']} />
          <mesh  geometry={nodes.APPARAT_1_2.geometry} material={materials['Material.019']} />
          <mesh  geometry={nodes.APPARAT_1_3.geometry} material={materials['Material.020']} />
          <mesh geometry={nodes.APPARAT_1_4.geometry} material={materials['Material.021']} />
          <mesh geometry={nodes.APPARAT_1_5.geometry} material={materials['Material.022']} />
          <mesh  geometry={nodes.APPARAT_1_6.geometry} material={materials['Material.023']} />
          <mesh geometry={nodes.APPARAT_1_7.geometry} material={materials['Material.025']} />
        </group>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.1}>
          <primitive object={nodes.Game_engine001_rootJoint} />
          <mesh geometry={nodes.shoes03Mesh_0.geometry} material={materials['shoes03.005']} rotation={[Math.PI / 2, 0, 0]} />
          <mesh geometry={nodes['high-polyMesh001_0'].geometry} material={materials['high-poly.003']} rotation={[Math.PI / 2, 0, 0]} />
          <mesh geometry={nodes.eyebrow012Mesh001_0.geometry} material={materials['eyebrow012.001']} rotation={[Math.PI / 2, 0, 0]} />
          <mesh  geometry={nodes.male_elegantsuit01Mesh_0.geometry} material={materials['male_elegantsuit01.005']} rotation={[Math.PI / 2, 0, 0]} />
          <mesh geometry={nodes.short02Mesh_0.geometry} material={materials['short02.005']} rotation={[Math.PI / 2, 0, 0]} />
          <mesh geometry={nodes.man_2_2Mesh_0.geometry} material={materials.man_2_2} rotation={[Math.PI / 2, 0, 0]} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/student.gltf')
