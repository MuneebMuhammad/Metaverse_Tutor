/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 teacher.gltf
Author: LasquetiSpice (https://sketchfab.com/LasquetiSpice)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/animated-female-teacher-for-narration-2b24fd414b9a4fbb9ffb5ffdd4e6a4e5
Title: Animated Female Teacher for Narration
*/

import React, { useRef, useState, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useSpeechSynthesis } from 'react-speech-kit'
import { useFrame } from '@react-three/fiber'

export default function Model(props) {
  const [talk, setTalk] = useState(true)
  const [listen, setListen] = useState(false)
  const [timeCount, setTimeCount] = useState(0)
  let {speak} = useSpeechSynthesis()

  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/teacher.gltf')
  const { actions } = useAnimations(animations, group)

  useEffect(()=>{
    console.log("Response:", (props.speechText))
    speak({text: props.speechText})
    setTimeCount(0)
  }, [props.speechText])

  useFrame((state, delta)=>{
    setTimeCount(timeCount + 1)
    if (timeCount < 60) {
      setTalk(false)
    }
    else if (timeCount < 120) setTalk(true)
    else if (timeCount < 180) setTalk(false)
    else if (timeCount < 240) setTalk(true)
    else setTalk(false)
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]} scale={1.08}>
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group  name="Female_Teacher_01_68">
                <group  name="Female_Teacher_01_Skeleton_67">
                  <group  name="GLTF_created_0">
                    <primitive  object={nodes.GLTF_created_0_rootJoint} />
                    <group  name="Wolf3D_Avatar_69" />
                    <skinnedMesh name="Object_8" geometry={nodes.Object_8.geometry} material={materials.Wolf3D_Avatar} skeleton={nodes.Object_8.skeleton} />
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/teacher.gltf')
